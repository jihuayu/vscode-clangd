{
    "clang.properties.clangd.path": "The path to clangd executable, e.g.: /usr/bin/clangd.",
    "clang.properties.clangd.arguments": "Arguments for clangd server.",
    "clang.properties.clangd.trace": "Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format.",
    "clang.properties.clangd.semanticHighlighting": "Enable semantic highlighting in clangd.",
    "clang.properties.clangd.semanticHighlighting.deprecation": "Legacy semanticHighlights is no longer supported. Please use `editor.semanticHighlighting.enabled` instead.",
    "clang.properties.clangd.fallbackFlags": "Extra clang flags used to parse files when no compilation database is found.",
    "clang.properties.clangd.serverCompletionRanking": "Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering.",
    "clang.properties.clangd.restartAfterCrash": "Auto restart clangd (up to 4 times) if it crashes.",
    "clang.properties.clangd.checkUpdates": "Check for language server updates on startup.",
    "clang.properties.clangd.onConfigChanged": "What to do when clangd configuration files are changed. Ignored for clangd 12+, which can reload such files itself.",
    "clang.properties.clangd.onConfigChanged.enum.0": "Prompt the user for restarting the server",
    "clang.properties.clangd.onConfigChanged.enum.1": "Automatically restart the server",
    "clang.properties.clangd.onConfigChanged.enum.2": "Do nothing",
    "clang.properties.clangd.detectExtensionConflicts": "Warn about conflicting extensions and suggest disabling them.",
    "clang.properties.clangd.inactiveRegions.useBackgroundHighlight": "Use a background highlight rather than opacity to identify inactive preprocessor regions.",
    "clang.properties.clangd.inactiveRegions.opacity": "Opacity of inactive regions (used only if clangd.inactiveRegions.useBackgroundHighlight=false)",
    "clang.colors.clangd.inactiveRegions.background": "Background color of inactive code regions (used only if clangd.inactiveRegions.useBackgroundHighlight=true)",
    "clang.commands.clangd.switchheadersource": "Switch Between Source/Header",
    "clang.commands.clangd.install": "Download language server",
    "clang.commands.clangd.update": "Check for language server update",
    "clang.commands.clangd.activate": "Manually activate extension",
    "clang.commands.clangd.restart": "Restart language server",
    "clang.commands.clangd.typeHierarchy": "Open Type Hierarchy",
    "clang.commands.clangd.typeHierarchy.viewParents": "Types: Show Base Classes",
    "clang.commands.clangd.typeHierarchy.viewChildren": "Types: Show Derived Classes",
    "clang.commands.clangd.typeHierarchy.close": "Close type hierarchy view",
    "clang.commands.clangd.memoryUsage": "Show memory usage",
    "clang.commands.clangd.memoryUsage.close": "Close memory usage view",
    "clang.commands.clangd.ast": "Show AST",
    "clang.commands.clangd.ast.close": "Close AST view",
    "clang.commands.clangd.projectConfig": "Open project configuration file",
    "clang.commands.clangd.userConfig": "Open user configuration file",
    "clang.commands.clangd.inlayHints.toggle": "Toggle inlay hints",
    "clang.capabilities.untrustedWorkspaces": "In restricted mode clangd.path and clangd.arguments are not respected."
}